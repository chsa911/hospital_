plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories { mavenCentral() }

ext {
    grpcVersion = '1.66.0'
    protobufVersion = '3.25.3'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Manage gRPC libs coherently
    implementation platform("io.grpc:grpc-bom:${grpcVersion}")

    // gRPC server (Spring Boot 3 compatible)
    implementation "net.devh:grpc-server-spring-boot-starter:3.0.0.RELEASE"

    // Transport + stubs
    runtimeOnly  "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

    // DB
    runtimeOnly 'com.h2database:h2'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // For @javax.annotation.Generated on Java 17
    compileOnly "javax.annotation:javax.annotation-api:1.3.2"

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

// JUnit 5 config MUST be outside the dependencies block
test {
    useJUnitPlatform()
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all().configureEach { t -> t.plugins { grpc {} } }
    }
}

// Keep your .proto files only here
sourceSets {
    main {
        proto { srcDir 'src/main/proto' }
    }
}

// Ensure .proto is not copied into resources (prevents duplicates)
tasks.named('processResources', Copy) {
    exclude('**/*.proto')
    duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.EXCLUDE
}

// Make the dependency explicit (harmless; plugin already wires it)
tasks.named('compileJava') {
    dependsOn tasks.named('generateProto')
}
